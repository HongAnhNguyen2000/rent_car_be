version: "2.1"

networks:
  shared_network:
    external: true

services:
  rent_car_db:
    container_name: rent_car_db
    image: "mysql:8.0.32"
    environment:
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      # - ./ext.sql:/docker-entrypoint-initdb.d/ext.sql
      - ./db_backup/db.sql:/docker-entrypoint-initdb.d/db.sql
      - ./mysql.conf:/etc/mysql/conf.d
      - ./dbdata:/var/lib/mysql/:delegated
    networks:
      - shared_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 10

  rent_car_backend:
    container_name: rent_car_backend
    build:
      context: ../backend
      dockerfile: ../docker/dockerfiles/backend
    volumes:
      - ../backend:/code:delegated
      - /code/node_modules
    networks:
      - shared_network
    environment:
      - SECRET_KEY=${SECRET_KEY}

      - PORT=${PORT}
      - LISTEN_ADDRESS=${LISTEN_ADDRESS}

      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SYNCHRONIZE=${DB_SYNCHRONIZE}
      - DB_LOGGING=${DB_LOGGING}
      - DB_CACHE=${DB_CACHE}

      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}
      - OAUTH_USER_PASSWORD=${OAUTH_USER_PASSWORD}
    depends_on:
      rent_car_db:
        condition: service_healthy
    tty: ${DOCKER_TTY}
    command: ${DOCKER_COMMAND}

  rent_car_client:
    container_name: rent_car_client 
    build:
      context: ../client
      dockerfile: ../docker/dockerfiles/client
    volumes:
      - ../client:/code:delegated
      - /code/node_modules
    tty: ${DOCKER_TTY}
    networks:
      - shared_network

  rent_car_nginx:
    container_name: rent_car_nginx
    build:
      context: ./
      dockerfile: ./dockerfiles/nginx
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d
      - ${SSL_PATH}:/resource/ssl
      - ../backend/public/:/resource/public
    networks:
      - shared_network
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - rent_car_backend
